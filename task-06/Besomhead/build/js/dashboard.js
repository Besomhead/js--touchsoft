var config={operatorName:"Operator",chatURL:"https://besomhead-chat.firebaseio.com/",requests:"fetch"},messageFactory=function(){function e(){}function a(e,t,n){var a,r,s;this.day=e.getDate(),this.month=e.getMonth(),this.time=(r=(a=e).getHours(),s=a.getMinutes(),(r<10?"0":"").concat(r.toString()).concat(":").concat(s<10?"0":"").concat(s.toString())),this.sender=t,this.body=n}return e.prototype.getMessage=function(e,t,n){return new a(e,t,n)},new e}(),DM=function(){function e(){}return e.prototype.getDOMElement=function(e){return"string"==typeof e?document.getElementById(e):e},e.prototype.getDOMChildrenByTag=function(e,t){return Array.from(this.getDOMElement(e).getElementsByTagName(t))},e.prototype.getDOMChildrenByClass=function(e,t){return Array.from(this.getDOMElement(e).getElementsByClassName(t))},e.prototype.createDOMElement=document.createElement.bind(document),e.prototype.appendDOMElement=function(e,t){this.getDOMElement(e).appendChild(t)},e.prototype.removeDOMElement=function(e,t){this.getDOMElement(e).removeChild(this.getDOMElement(t))},e.prototype.addListener=function(e,t,n){this.getDOMElement(e).addEventListener(t,n)},e.prototype.removeListener=function(e,t,n){this.getDOMElement(e).removeEventListener(t,n)},e.prototype.addCSSClass=function(t){var n=this;Array.from(arguments).slice(1).forEach(function(e){n.getDOMElement(t).classList.add(e)})},e.prototype.removeCSSClass=function(e,t){this.getDOMElement(e).classList.remove(t)},new e}(),HTTP_GET="GET",HTTP_POST="POST",HTTP_PUT="PUT",REQUEST_FETCH="fetch",REQUEST_XHR="xhr",storageManager=function(i){function e(){}function d(e,t,n){return fetch(storageManager.getStoragePath(e),(a=t,r=n,s={method:a,headers:{Accept:"application/json","Content-Type":"application/json"}},a!==HTTP_GET&&(s.body=JSON.stringify(r)),s)).then(function(e){return e.json()}).then(function(e){return e});var a,r,s}return e.prototype.getStoragePath=function(e){return i.chatURL+e+".json"},e.prototype.sendRequestToStorage=function(e,t,n){var a,r,s,o;return i.requests===REQUEST_FETCH?a=d(e,t,n):i.requests===REQUEST_XHR&&(r=e,s=t,o=n,a=new Promise(function(e,t){var n=new XMLHttpRequest;n.open(s,storageManager.getStoragePath(r),!0),n.setRequestHeader("Accept","application/json"),n.setRequestHeader("Content-Type","application/json"),n.addEventListener("load",function(){e(JSON.parse(n.response))}),n.addEventListener("error",function(){t(n.statusText)}),n.send(JSON.stringify(o))})),a},new e}(config),updatesManager=function(){function e(){this.responseData=void 0}return e.prototype.getDataFromStorage=function(e){var t=new XMLHttpRequest;t.addEventListener("readystatechange",function(){var e=t.responseText;if(this.status&&this.responseText){if(e.lastIndexOf("event:")!==e.lastIndexOf("event: put"))return;window.postMessage(JSON.parse(e.slice(e.lastIndexOf("data:")+"data:".length,e.lastIndexOf("}")+1)),window.location)}}),t.open("GET",storageManager.getStoragePath(e),!0),t.setRequestHeader("Accept","text/event-stream"),t.send()},new e}(),dashboardFactory=function(m){var f,i="Вы",O=12e4,d="operators-dashboard-users-list-container",c="operators-dashboard-selected-user-container",E="operators-dashboard-selected-user-inner",o="operators-dashboard-user-chat-messages",l="operators-dashboard-user-chat-input",M="dashboard-single-user-container",b="dashboard-single-user-container-unread",T="dashboard-user-status-online",C="dashboard-user-status-offline",n=-1,a=1;function e(){}function u(){DM.removeDOMElement(c,E)}function S(e){return DM.getDOMChildrenByTag(e,"label").find(function(e){return e.hidden}).innerHTML}function y(e){var t=DM.getDOMElement(o),n=DM.createDOMElement("div"),a=DM.createDOMElement("div");n.innerHTML=e.sender,a.innerHTML=e.body,DM.appendDOMElement(t,n),DM.appendDOMElement(t,a)}function D(e){var t=DM.createDOMElement("fieldset"),n=DM.createDOMElement("legend"),a=DM.createDOMElement("div"),r=DM.createDOMElement("textarea"),s=DM.createDOMElement("button");return DM.addCSSClass(t,"dashboard-selected-user-chat-container"),n.innerHTML="Чат",a.id=o,DM.addCSSClass(a,"dashboard-selected-user-chat-messages"),r.id=l,DM.addCSSClass(r,"dashboard-selected-user-chat-input"),r.placeholder="Новое сообщение пользователю",DM.addCSSClass(s,"dashboard-selected-user-chat-button"),s.innerHTML="Send",DM.addListener(s,"click",function(e){var t,n=DM.getDOMElement(l).value;""!==n&&(t=messageFactory.getMessage(new Date,m.operatorName+":",n),DM.getDOMElement(l).value="",storageManager.sendRequestToStorage(S(e)+"/messages",HTTP_POST,t))}.bind(null,e)),DM.appendDOMElement(t,n),DM.appendDOMElement(t,a),DM.appendDOMElement(t,r),DM.appendDOMElement(t,s),t}function r(e){var t,n,a=DM.createDOMElement("fieldset"),r=DM.createDOMElement("legend"),s=DM.createDOMElement("button"),o=DM.createDOMElement("label"),i=DM.createDOMElement("div");a.id=E,DM.addCSSClass(a,"dashboard-selected-user-container-inner"),r.innerHTML="Active: "+DM.getDOMChildrenByTag(e,"label").shift().innerHTML,s.innerHTML="x",DM.addCSSClass(s,"dashboard-selected-user-container-button"),DM.addListener(s,"click",u),DM.addCSSClass(i,"dashboard-selected-user-controls-container"),o.innerHTML=S(e),o.hidden=!0,DM.appendDOMElement(i,D(e)),DM.appendDOMElement(i,(t=DM.createDOMElement("fieldset"),n=DM.createDOMElement("legend"),DM.addCSSClass(t,"dashboard-selected-user-controller"),n.innerHTML="Control",DM.appendDOMElement(t,n),t)),DM.appendDOMElement(a,r),DM.appendDOMElement(a,s),DM.appendDOMElement(a,i),DM.appendDOMElement(a,o),DM.appendDOMElement(c,a)}function v(e){storageManager.sendRequestToStorage(S(e)+"/read",HTTP_PUT,!0)}function p(e){var t,n;e.target.classList.contains(M)&&(DM.getDOMElement(E)&&u(),DM.removeCSSClass(e.target,b),r(e.target),t=e.target,(n=f[S(t)].messages)&&Object.keys(n).forEach(function(e){y(n[e])}),v(e.target))}function L(e,t,n){DM.removeCSSClass(e,t),DM.addCSSClass(e,n)}function s(e,t){var n=DM.createDOMElement("div"),a=DM.createDOMElement("label"),r=DM.createDOMElement("label"),s=DM.createDOMElement("label"),o=DM.createDOMElement("div");return DM.addCSSClass(n,M),e.read||DM.addCSSClass(n,b),a.innerHTML=void 0===e.userName||e.userName===i?t:e.userName,r.innerHTML=t,r.hidden=!0,DM.addCSSClass(o,"dashboard-user-status"),!function(e){var t,n,a,r;if(!e.messages)return!1;for(r=Object.keys(e.messages),t=e.messages[r.pop()];t&&t.sender===m.operatorName.concat(":");)t=e.messages[r.pop()];return!!t&&(n=t.time.split(":"),a=new Date((new Date).getFullYear(),Number(t.month),Number(t.day),Number(n.shift()),Number(n.shift())),new Date-a<=O)}(e)?L(o,C,C):L(o,T,T),s.innerHTML=e.chatState,DM.appendDOMElement(n,a),DM.appendDOMElement(n,r),DM.appendDOMElement(n,o),DM.appendDOMElement(n,s),DM.addListener(d,"click",p),DM.appendDOMElement(d,n),n}function h(e){var t=e||DM.getDOMChildrenByClass(d,M);return t.forEach(function(e){DM.removeDOMElement(d,e)}),t}function t(e){var t=e.target.value.toLowerCase(),n=DM.getDOMChildrenByClass(d,M);if(""===t)return h(n),void dashboardFactory.loadUsersList(f);n.forEach(function(e){-1===DM.getDOMChildrenByTag(e,"label").shift().innerHTML.toLowerCase().indexOf(t)&&DM.removeDOMElement(d,e)})}function g(e,t){return DM.getDOMChildrenByTag(e,"label").shift().innerHTML.toLowerCase()<DM.getDOMChildrenByTag(t,"label").shift().innerHTML.toLowerCase()?n:a}function H(e){return DM.getDOMChildrenByTag(e,"div").shift().classList.contains(T)?n:a}function w(e){return"chat-expanded"===DM.getDOMChildrenByTag(e,"label").pop().innerHTML?n:a}function N(e){return e.classList.contains(b)?n:a}function B(e){var t=DM.getDOMChildrenByTag(e.target,"option").find(function(e){return e.selected}),n=h();function a(e){n.sort(e),n.forEach(function(e){DM.appendDOMElement(d,e)})}switch(t.innerHTML){case"User Name":a(g);break;case"Online":a(H);break;case"Chat state":a(w);break;case"Unread":a(N);break;default:dashboardFactory.loadUsersList(f)}}function U(e){e.target.value="",h(),dashboardFactory.loadUsersList(f)}function P(e){return f[e]||(f[e]={chatState:"chat-collapsed",read:"true"}),f[e]}function R(t,e){var n;return(n=DM.getDOMChildrenByClass(d,M).find(function(e){return S(e)===t}))||(n=s(e,t)),n}function x(e){var t,n,a,r,s,o,i,d,c,l,M,u,D=e.data.path.split("/").slice(1),p=D.shift(),h=e.data.data,g=!0;if(""===p)dashboardFactory.loadUsersList(h),f=h;else if(p.match(/user\d{13,}/)){switch(D.shift()){case"read":!0===h&&(g=!1),M=h,u=R(l=p,P(l)),(f[l].read=M)?DM.removeCSSClass(u,b):DM.addCSSClass(u,b);break;case"chatState":d=h,c=R(i=p,P(i)),f[i].chatState=d,DM.getDOMChildrenByTag(c,"label").pop().innerHTML=d;break;case"messages":-1!==h.sender.indexOf(m.operatorName)&&(g=!1),r=p,s=h,o=D.shift(),f[r].messages||(f[r].messages={}),f[r].messages[o]=s,DM.getDOMElement(E)&&S(E)===r&&(v(R(r,f[r])),y(s));break;case"userName":n=h,a=R(t=p,P(t)),f[t].userName=n,DM.getDOMChildrenByTag(a,"label").shift().innerHTML=n}g&&function(e){var t=DM.getDOMChildrenByTag(R(e,f[e]),"div").shift();L(t,C,T),setTimeout(L.bind(this,t,T,C),O)}(p)}}return e.prototype.loadUsersList=function(t){Object.keys(t).forEach(function(e){s(t[e],e)})},e.prototype.initListeners=function(){DM.addListener("operators-dashboard-users-filter-bar","change",t),DM.addListener("operators-dashboard-users-filter-bar","focus",U),DM.addListener("operators-dashboard-users-sort-bar","change",B)},e.prototype.subscribeOnUpdates=function(){window.addEventListener("message",x,!1),updatesManager.getDataFromStorage("")},new e}(config);window.addEventListener("load",function(){dashboardFactory.initListeners(),dashboardFactory.subscribeOnUpdates()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
